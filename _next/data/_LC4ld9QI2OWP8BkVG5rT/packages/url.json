{"pageProps":{"packageData":{"slug":"url","metadata":{"name":"@execonline-inc/url","description":"Safe URL parsing"},"readme":"# `url`\n\nThe `url` package provides functions to validate URLs.\n\n## Types\n\n### `InvalidUrlError`\n\n```ts\ninterface InvalidUrlError {\n  kind: 'invalid-url-error';\n  href: string;\n  base?: string | URL;\n  error: unknown;\n}\n```\n\n## Functions\n\n### `invalidUrlError`\n\nThis function constructs an `InvalidUrlError` object from the given parameters.\n\n```ts\nimport { invalidUrlError, InvalidUrlError } from '@execonline-inc/url';\n\nconst error: unknown = {};\nconst href: string = 'href';\nconst base: string = 'base';\nconst result: InvalidUrlError = invalidUrlError(error, href, base);\n```\n\n### `toUrlR`\n\nThis function attempts construction of a `URL` object and returns a `Result`. Handles a related [bug in Safari](https://github.com/zloirock/core-js/issues/656).\n\n```ts\nimport { InvalidUrlError, toUrlR } from '@execonline-inc/url';\nimport { Result } from 'resulty';\n\nconst result: Result<InvalidUrlError, URL> = toUrlR('href', 'base');\n```\n\n### `toUrl`\n\nThis function attempts construction of a `URL` object (via `toUrlR`) and returns a `Maybe`.\n\n```ts\nimport { InvalidUrlError, toUrl } from '@execonline-inc/url';\nimport { Maybe } from 'maybeasy';\n\nconst result: Maybe<InvalidUrlError> = toUrl('href', 'base');\n```\n\n### `toUrlT`\n\nThis function attempts construction of a `URL` object (via `toUrlR`) as a `Task`.\n\n```ts\nimport { InvalidUrlError, toUrlT } from '@execonline-inc/url';\nimport Task from 'taskarian';\n\nconst result: Task<InvalidUrlError, URL> = toUrlT('href', 'base');\n```\n"}},"__N_SSG":true}