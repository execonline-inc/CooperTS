{"pageProps":{"packageData":{"slug":"numbers","metadata":{"name":"@execonline-inc/numbers","description":"Type safe number ops"},"readme":"# `numbers`\n\nSafely parse numbers from strings\n\n## Functions\n\n### `parseIntM`\n\nAttempts to parse an integer from a string, using `Maybe<number>` to wrap the success or failure of\nthe parse.\n\n```ts\nimport { parseIntM } from '@execonline-inc/numbers';\n\nparseIntM('123').getOrElseValue(0) // returns `123`\nparseIntM('123.42').getOrElseValue(0) // returns `123`\nparseIntM('Hello World!').getOrElseValue(0) // returns `0`\n```\n\n### `parseIntR`\n\nAttempts to parse an integer from a string, using `Result<NumberParseFailure, number>` to wrap the\nsuccess or failure of the parse.\n\n```ts\nimport { parseIntR } from '@execonline-inc/numbers';\n\nparseIntR('123').getOrElseValue(0) // returns `123`\nparseIntR('123.42').getOrElseValue(0) // returns `123`\n\nparseIntR('Hello World').elseDo(console.warn).getOrElseValue(0)\n// Prints object: { kind: 'number-parse-failure', message: `Couldn't parse string into a number` }\n// Returns 0\n```\n\n### `parseIntT`\n\nAttempts to parse an integer from a string, using `Task<NumberParseFailure, number>` to wrap the\nsuccess or failure of the parse.\n\n```ts\nimport { parseIntT } from '@execonline-inc/numbers';\n\nparseIntT('123').fork(() => {}, console.log); // Prints the integer 123\nparseIntT('123.42').fork(() => {}, console.log); // Prints the integer 123\n\nparseIntT('Hello World').fork(console.warn, () => {});\n// Prints object: { kind: 'number-parse-failure', message: `Couldn't parse string into a number` }\n```\n\n### `percentage`\n\nDisplay a number as a percentage.\n\n```ts\nimport { percentage } from '@execonline-inc/numbers';\n\npercentage(42.22) // returns the string \"42%\"\n```\n"}},"__N_SSG":true}