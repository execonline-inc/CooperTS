{"pageProps":{"packageData":{"slug":"error-handling","metadata":{"name":"@execonline-inc/error-handling","description":"Functions to simplifiy error handling across monad types"},"markdown":{"content":"# `error-handling`\n\nThe `error-handling` package provides several utility functions that allow you to convert between the types Task, Maybe, and Result while handling any errors.\n\n## Functions\n\n### `asTask`\nThe asTask function takes a Result object as input and converts it into a Task object.\n\n```ts\nimport { ok } from 'resulty';\nimport { asTask } from 'error-handling';\n\nconst result = ok('test');\nconst task = asTask(result); // Task\n```\n\n### `asMaybe`\nThe asMaybe function takes a Result object as input and converts it into a Maybe object.\n\n```ts\nimport { ok } from 'resulty';\nimport { asMaybe } from 'error-handling';\n\nconst result = ok('test');\nconst task = asMaybe(result); // Maybe\n```\n\n### `runResult`\nThe runResult function tries to execute the throwable input function, and if it throws an error, it returns an Err case with the error as the value. If the input function runs successfully, it returns an Ok case with the returned value.\n\n```ts\nimport { runResult } from 'error-handling';\n\nconst randomErrorFunction = (): boolean => {\n  if (Math.random() < 0.5) {\n    return true;\n  } else {\n    throw new Error('Random Error!');\n  }\n};\n\nconst result = runResult(randomErrorFunction); // Result\n```\n\n### `runMaybe`\n\nThe runMaybe function tries to execute the throwable input function, and returns a maybe. If an error is thrown `nothing()` will be returned and if the function is successful a `just(value)` will be returned.\n\n```ts\nimport { runMaybe } from 'error-handling';\n\nconst randomErrorFunction = (): boolean => {\n  if (Math.random() < 0.5) {\n    return true;\n  } else {\n    throw new Error('Random Error!');\n  }\n};\n\nconst maybe = runMaybe(randomErrorFunction); // Maybe\n```\n\n### `runTask`\nThe runTask function tries to execute the throwable input function, and if it throws an error, it returns an Err case with the error as the value. If the input function runs successfully, it returns an Ok case with the returned value.\n\n```ts\nimport { runTask } from 'error-handling';\n\nconst randomErrorFunction = (): boolean => {\n  if (Math.random() < 0.5) {\n    return true;\n  } else {\n    throw new Error('Random Error!');\n  }\n};\n\nconst task = runTask(randomErrorFunction); // Task\n```"}},"navTree":[{"title":"About","href":"/about","links":[]},{"title":"Guide","href":"/guide","links":[{"title":"CooperTS - Practical Patterns","href":"/guide/practical-patterns"}]},{"title":"Examples","href":"/examples","links":[{"title":"Task Manager App","href":"/examples#task-manager-app"},{"title":"Cellular Automata Emulator","href":"/examples#cellular-automata-emulator"},{"title":"This Doc Site 😁","href":"/examples#this-doc-site"}]},{"title":"Frequently Asked Questions","href":"/faq","links":[{"title":"What's All This About Map Then?","href":"/faq/about-map"},{"title":"Avoiding The Billion Dollar Mistake","href":"/faq/billion-dollar-mistake"},{"title":"When to Use Which - getOrElse vs getOrElseValue","href":"/faq/getorelse-vs-getorelsevalue"},{"title":"Imperative vs Declarative Programming","href":"/faq/imperative-vs-declarative"},{"title":"When To Use Which - map vs. andThen","href":"/faq/map-vs-andthen"},{"title":"When To Use Which - Maybe vs Result vs Task (and other Monads)","href":"/faq/monads"}]},{"title":"Packages","href":"/packages","links":[{"title":"ajaxian","href":"/packages/ajaxian"},{"title":"ajaxios","href":"/packages/ajaxios"},{"title":"@kofno/cute","href":"/packages/cute"},{"title":"@kofno/gaia","href":"/packages/gaia"},{"title":"jsonous","href":"/packages/jsonous"},{"title":"maybeasy","href":"/packages/maybeasy"},{"title":"nonempty-list","href":"/packages/nonempty-list"},{"title":"@kofno/piper","href":"/packages/piper"},{"title":"resulty","href":"/packages/resulty"},{"title":"@kofno/stack-ts","href":"/packages/stack-ts"},{"title":"taskarian","href":"/packages/taskarian"},{"title":"@execonline-inc/appy","href":"/packages/appy"},{"title":"@execonline-inc/collections","href":"/packages/collections"},{"title":"@execonline-inc/decoders","href":"/packages/decoders"},{"title":"@execonline-inc/dom","href":"/packages/dom"},{"title":"@execonline-inc/environment","href":"/packages/environment"},{"title":"@execonline-inc/error-handling","href":"/packages/error-handling"},{"title":"@execonline-inc/logging","href":"/packages/logging"},{"title":"@execonline-inc/maybe-adapter","href":"/packages/maybe-adapter"},{"title":"@execonline-inc/numbers","href":"/packages/numbers"},{"title":"@execonline-inc/resource","href":"/packages/resource"},{"title":"@execonline-inc/strings","href":"/packages/strings"},{"title":"@execonline-inc/time","href":"/packages/time"},{"title":"@execonline-inc/time-distance","href":"/packages/time-distance"},{"title":"@execonline-inc/translations","href":"/packages/translations"},{"title":"@execonline-inc/url","href":"/packages/url"}]}]},"__N_SSG":true}