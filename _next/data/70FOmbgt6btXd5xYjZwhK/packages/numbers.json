{"pageProps":{"packageData":{"slug":"numbers","metadata":{"name":"@execonline-inc/numbers","description":"Type safe number ops"},"markdown":{"content":"# `numbers`\n\nSafely parse numbers from strings\n\n## Functions\n\n### `parseIntM`\n\nAttempts to parse an integer from a string, using `Maybe<number>` to wrap the success or failure of\nthe parse.\n\n```ts\nimport { parseIntM } from '@execonline-inc/numbers';\n\nparseIntM('123').getOrElseValue(0) // returns `123`\nparseIntM('123.42').getOrElseValue(0) // returns `123`\nparseIntM('Hello World!').getOrElseValue(0) // returns `0`\n```\n\n### `parseIntR`\n\nAttempts to parse an integer from a string, using `Result<NumberParseFailure, number>` to wrap the\nsuccess or failure of the parse.\n\n```ts\nimport { parseIntR } from '@execonline-inc/numbers';\n\nparseIntR('123').getOrElseValue(0) // returns `123`\nparseIntR('123.42').getOrElseValue(0) // returns `123`\n\nparseIntR('Hello World').elseDo(console.warn).getOrElseValue(0)\n// Prints object: { kind: 'number-parse-failure', message: `Couldn't parse string into a number` }\n// Returns 0\n```\n\n### `parseIntT`\n\nAttempts to parse an integer from a string, using `Task<NumberParseFailure, number>` to wrap the\nsuccess or failure of the parse.\n\n```ts\nimport { parseIntT } from '@execonline-inc/numbers';\n\nparseIntT('123').fork(() => {}, console.log); // Prints the integer 123\nparseIntT('123.42').fork(() => {}, console.log); // Prints the integer 123\n\nparseIntT('Hello World').fork(console.warn, () => {});\n// Prints object: { kind: 'number-parse-failure', message: `Couldn't parse string into a number` }\n```\n\n### `percentage`\n\nDisplay a number as a percentage.\n\n```ts\nimport { percentage } from '@execonline-inc/numbers';\n\npercentage(42.22) // returns the string \"42%\"\n```\n\n# Numeric Predicates\n\nCompare numbers in a declarative way.\n\n## Functions\n\n### `positive`\n\nCheck if a value is greater than zero.\n\n```ts\nimport { positive } from '@execonline-inc/numbers';\n\npositive(10) // true\npositive(0) // false\n\n```\n\n### `whenPositive`\n\nA function that returns Maybe is available\n\n```ts\nimport { whenPositive } from '@execonline-inc/numbers';\nimport { nothing, just } from 'maybeasy';\n\nconst widgetMessage = (value: Maybe<number>) =>\n  value\n    .andThen(whenPositive)\n    .map((count) => `${count} widgets still remain!`)\n    .getOrElseValue(\"No remaining widgets!\");\n\nwidgetMessage(just(7)) // \"7 widgets still remain!\"\nwidgetMessage(just(0)) // \"No remaining widgets!\"\nwidgetMessage(nothing()) // No remaining widgets!\n```\n\n### `gt`\n\nCheck if a value is greater than.\n\n```ts\nimport { gt } from '@execonline-inc/numbers';\nimport { just, isJust } from 'maybeasy';\n\nconst checkForGreaterThan = (value: number): boolean => just(value).map(gt(10)).isJust();\n\ncheckForGreaterThan(7) // evaluates to false\ncheckForGreaterThan(11) // evaluates to true\n```\n\n### `whenGt`\n\nA function that returns Maybe is available\n\n```ts\nimport { gt, multiplyBy } from '@execonline-inc/numbers';\n\nconst checkForGreaterThanAndMultiply = (value: Maybe<number>) =>\n  value\n    .andThen(whenGt(7))\n    .map(multiplyBy(6))\n    .getOrElseValue(0);\n\ncheckForGreaterThanAndMultiply(4) // evaluates to 0\ncheckForGreaterThanAndMultiply(11) // evaluates to 66\n```\n\n## Other Functions\n\nThe following functions work similarly. Many are available with versions that return Maybe.\n\n### `lt`\nLess than\n### `gte`\nGreater than or equal to\n### `lte`\nLess than or equal to\n### `eq`\nEqual to\n### `neq`\nNot equal to\n### `between`\nTakes a min and max as arguments, returns a boolean.\n### `betweenEq`\nTakes a min and max as arguments, returns a boolean.\n### `even`\nValue is even\n### `odd`\nValue is odd\n### `positive`\nValue is positive\n### `negative`\nValue is negative\n### `zero`\nValue is zero\n### `multiplyBy`\nMultiplies the value by inputted value\n### `divideBy`\nDivides the value by inputted value\n### `add`\nAdds the value to inputted value\n### `subtractBy`\nSubtracts the value from inputted value\n\n"}},"navTree":[{"title":"About","href":"/about","links":[]},{"title":"Guide","href":"/guide","links":[{"title":"CooperTS - Practical Patterns","href":"/guide/practical-patterns"}]},{"title":"Examples","href":"/examples","links":[{"title":"Task Manager App","href":"/examples#task-manager-app"},{"title":"Cellular Automata Emulator","href":"/examples#cellular-automata-emulator"},{"title":"This Doc Site üòÅ","href":"/examples#this-doc-site"}]},{"title":"Frequently Asked Questions","href":"/faq","links":[{"title":"What's All This About Map Then?","href":"/faq/about-map"},{"title":"Avoiding The Billion Dollar Mistake","href":"/faq/billion-dollar-mistake"},{"title":"When to Use Which - getOrElse vs getOrElseValue","href":"/faq/getorelse-vs-getorelsevalue"},{"title":"Imperative vs Declarative Programming","href":"/faq/imperative-vs-declarative"},{"title":"When To Use Which - map vs. andThen","href":"/faq/map-vs-andthen"},{"title":"When To Use Which - Maybe vs Result vs Task (and other Monads)","href":"/faq/monads"}]},{"title":"Packages","href":"/packages","links":[{"title":"ajaxian","href":"/packages/ajaxian"},{"title":"ajaxios","href":"/packages/ajaxios"},{"title":"@kofno/cute","href":"/packages/cute"},{"title":"@kofno/gaia","href":"/packages/gaia"},{"title":"jsonous","href":"/packages/jsonous"},{"title":"maybeasy","href":"/packages/maybeasy"},{"title":"nonempty-list","href":"/packages/nonempty-list"},{"title":"@kofno/piper","href":"/packages/piper"},{"title":"resulty","href":"/packages/resulty"},{"title":"@kofno/stack-ts","href":"/packages/stack-ts"},{"title":"taskarian","href":"/packages/taskarian"},{"title":"@execonline-inc/appy","href":"/packages/appy"},{"title":"@execonline-inc/collections","href":"/packages/collections"},{"title":"@execonline-inc/decoders","href":"/packages/decoders"},{"title":"@execonline-inc/dom","href":"/packages/dom"},{"title":"@execonline-inc/environment","href":"/packages/environment"},{"title":"@execonline-inc/error-handling","href":"/packages/error-handling"},{"title":"@execonline-inc/logging","href":"/packages/logging"},{"title":"@execonline-inc/maybe-adapter","href":"/packages/maybe-adapter"},{"title":"@execonline-inc/numbers","href":"/packages/numbers"},{"title":"@execonline-inc/resource","href":"/packages/resource"},{"title":"@execonline-inc/strings","href":"/packages/strings"},{"title":"@execonline-inc/time","href":"/packages/time"},{"title":"@execonline-inc/time-distance","href":"/packages/time-distance"},{"title":"@execonline-inc/translations","href":"/packages/translations"},{"title":"@execonline-inc/url","href":"/packages/url"},{"title":"@execonline-inc/web-url","href":"/packages/web-url"}]}]},"__N_SSG":true}