{"pageProps":{"packageData":{"slug":"environment","metadata":{"name":"@execonline-inc/environment","description":"Safely read environment cofigurations"},"markdown":{"content":"# `environment`\n\nThe `environment` package provides functions read from the execution environment.\n\n## Types\n\n### `MissingVarError`\n\nResembles the error when the environment variable doesn't exist for a read attempt.\n\n```ts\ninterface MissingVarError {\n  kind: 'missing-var-error';\n  key: string;\n}\n```\n\n### `Production`\n\nInterface representing a production environment.\n\n```ts\ninterface Production {\n  kind: 'production';\n}\n```\n\n### `Development`\n\nInterface representing a development environment.\n\n```ts\ninterface Development {\n  kind: 'development';\n}\n```\n\n### `Unknown`\n\nInterface representing an unknown environment.\n\n```ts\ninterface Unknown {\n  kind: 'unknown';\n}\n```\n\n### `Environment`\n\n```ts\ntype Environment = Production | Development | Unknown;\n```\n\n## Functions\n\n### `missingVarError`\n\nThis function takes an environment variable name and constructs a `MissingVarError` type from it.\n\n```ts\nimport { missingVarError, MissingVarError } from '@execonline-inc/environment';\n\nconst result: MissingVarError = missingVarError('SOME_ENV_VAR');\n// { kind: 'missing-var-error', key: 'SOME_ENV_VAR' }\n```\n\n### `readVarM`\n\nThis function reads for a given key from `process.env` and wraps the value in a `Maybe`. When a value exists for the key, the result is a `Just`, otherwise it is a `Nothing`.\n\n```ts\nimport { readVarM } from '@execonline-inc/environment';\nimport { Maybe } from 'maybeasy';\n\nconst result: Maybe<string> = readVarM('SOME_ENV_VAR');\n```\n\n### `readVarR`\n\nLike `readVarM`, but the condition for no value is an error `Result`.\n\n```ts\nimport { MissingVarError, readVarR } from '@execonline-inc/environment';\nimport { Result } from 'resulty';\n\nconst result: Result<MissingVarError, string> = readVarR('SOME_ENV_VAR');\n```\n\n### `readVarT`\n\nLike `readVarR`, but as a `Task` instead of a `Result`.\n\n```ts\nimport { MissingVarError, readVarT } from '@execonline-inc/environment';\nimport Task from 'taskarian';\n\nconst result: Task<MissingVarError, string> = readVarT('SOME_ENV_VAR');\n```\n\n### `environment`\n\nThis function reads the `NODE_ENV` environment variable and returns an object representing the detected environment.\n\n```ts\nimport { environment, Environment } from '@execonline-inc/environment';\n\nconst result: Environment = environment();\n```\n"}},"navTree":[{"title":"About","href":"/about","links":[]},{"title":"Guide","href":"/guide","links":[{"title":"CooperTS - Practical Patterns","href":"/guide/practical-patterns"}]},{"title":"Examples","href":"/examples","links":[{"title":"Task Manager App","href":"/examples#task-manager-app"},{"title":"Cellular Automata Emulator","href":"/examples#cellular-automata-emulator"},{"title":"This Doc Site üòÅ","href":"/examples#this-doc-site"}]},{"title":"Frequently Asked Questions","href":"/faq","links":[{"title":"What's All This About Map Then?","href":"/faq/about-map"},{"title":"Avoiding The Billion Dollar Mistake","href":"/faq/billion-dollar-mistake"},{"title":"When to Use Which - getOrElse vs getOrElseValue","href":"/faq/getorelse-vs-getorelsevalue"},{"title":"Imperative vs Declarative Programming","href":"/faq/imperative-vs-declarative"},{"title":"When To Use Which - map vs. andThen","href":"/faq/map-vs-andthen"},{"title":"When To Use Which - Maybe vs Result vs Task (and other Monads)","href":"/faq/monads"}]},{"title":"Packages","href":"/packages","links":[{"title":"ajaxian","href":"/packages/ajaxian"},{"title":"ajaxios","href":"/packages/ajaxios"},{"title":"@kofno/cute","href":"/packages/cute"},{"title":"@kofno/gaia","href":"/packages/gaia"},{"title":"jsonous","href":"/packages/jsonous"},{"title":"maybeasy","href":"/packages/maybeasy"},{"title":"nonempty-list","href":"/packages/nonempty-list"},{"title":"@kofno/piper","href":"/packages/piper"},{"title":"resulty","href":"/packages/resulty"},{"title":"@kofno/stack-ts","href":"/packages/stack-ts"},{"title":"taskarian","href":"/packages/taskarian"},{"title":"@execonline-inc/appy","href":"/packages/appy"},{"title":"@execonline-inc/collections","href":"/packages/collections"},{"title":"@execonline-inc/decoders","href":"/packages/decoders"},{"title":"@execonline-inc/dom","href":"/packages/dom"},{"title":"@execonline-inc/environment","href":"/packages/environment"},{"title":"@execonline-inc/error-handling","href":"/packages/error-handling"},{"title":"@execonline-inc/logging","href":"/packages/logging"},{"title":"@execonline-inc/maybe-adapter","href":"/packages/maybe-adapter"},{"title":"@execonline-inc/numbers","href":"/packages/numbers"},{"title":"@execonline-inc/resource","href":"/packages/resource"},{"title":"@execonline-inc/strings","href":"/packages/strings"},{"title":"@execonline-inc/time","href":"/packages/time"},{"title":"@execonline-inc/time-distance","href":"/packages/time-distance"},{"title":"@execonline-inc/translations","href":"/packages/translations"},{"title":"@execonline-inc/url","href":"/packages/url"},{"title":"@execonline-inc/web-url","href":"/packages/web-url"}]}]},"__N_SSG":true}