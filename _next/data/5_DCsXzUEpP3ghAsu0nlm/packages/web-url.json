{"pageProps":{"packageData":{"slug":"web-url","metadata":{"name":"@execonline-inc/web-url","description":"Browser API safe URL parsing"},"markdown":{"content":"# web-url\n\n`web-url` provides services for validating and constructing URLs.\n\nIt is a wrapper around the [URL](https://developer.mozilla.org/en-US/docs/Web/API/URL)\nand [URLSearchParams](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams) API.\n\n## Types\n\n### `InvalidWebUrlError`\n\n```ts\ninterface InvalidWebUrlError {\n  kind: 'invalid-web-url-error';\n  error: unknown;\n}\n```\n\n## Functions\n\n### `invalidWebUrlError`\n\nThis function constructs an `InvalidWebUrlError` object from the given parameters.\n\n```ts\nimport { InvalidWebUrlError } from '@execonline-inc/web-url';\n\nconst error: unknown = {};\nconst result: InvalidWebUrlError = invalidWebUrlError(error);\n```\n\n### `href`\n\nThis function returns the `href` of the `URL` object.\n\n```ts\nimport { href, toUrl } from '@execonline-inc/web-url';\ntoUrl(\"https://example.com\").map(href) // Just(\"https://example.com\")\n```\n\n### `toUrlR`\n\nThis function attempts construction of a `URL` object and returns a `Result`. Handles a related [bug in Safari](https://github.com/zloirock/core-js/issues/656).\n\n```ts\nimport { InvalidWebUrlError, toUrlR } from '@execonline-inc/web-url';\nimport { Result } from 'resulty';\n\ntoUrlR('foo', 'http://example.com').map((url: URL) => url.href) // Ok(\"http://example.com/foo\")\n\nconst result: Result<InvalidWebUrlError, URL> = toUrlR('href', 'base');\n```\n\n### `toUrl`\n\nThis function attempts construction of a `URL` object (via `toUrlR`) and returns a `Maybe`.\n\n```ts\nimport { InvalidWebUrlError, toUrl } from '@execonline-inc/web-url';\nimport { Maybe } from 'maybeasy';\n\ntoUrl('foo', 'http://example.com').map((url: URL) => url.href) // Just(\"http://example.com/foo\")\n```\n\n### `toUrlT`\n\nThis function attempts construction of a `URL` object (via `toUrlR`) as a `Task`.\n\n```ts\nimport { InvalidWebUrlError, toUrlT } from '@execonline-inc/web-url';\nimport Task from 'taskarian';\n\ntoUrlT('foo', 'http://example.com').fork(\n  (error: InvalidWebUrlError) => console.error(error),\n  (url: URL) => console.log(url.href) // $> \"http://example.com/foo\"\n);\n```\n\n### `getQueryParam`\n\nThis function returns the first value of the query parameter with the given name.\n\n```ts\nimport { getQueryParam, toUrl } from '@execonline-inc/web-url';\ntoUrl(\"https://example.com?foo=bar&foo=baz\").andThen(getQueryParam(\"foo\")) // Just(\"bar\")\n```\n\n### `getQueryParamArray`\n\nThis function returns all values in a query parameter with the given name.\n\n```ts\nimport { getQueryParamArray, toUrl } from '@execonline-inc/web-url';\ntoUrl(\"https://example.com?foo=bar&foo=baz\").map(getQueryParamArray(\"foo\")) // Just([\"bar\", \"baz\"])\n```\n\n### `getQueryParamRailsArray`\n\nThis function returns all values in a query parameter with the given name, Rails-style.\n\n```ts\nimport { getQueryParamRailsArray, toUrl } from '@execonline-inc/web-url';\ntoUrl(\"https://example.com?foo[]=bar&foo[]=baz\").map(getQueryParamRailsArray(\"foo\")) // Just([\"bar\", \"baz\"])\n```\n\n\n### `putQueryParam`\n\nThis function adds a query parameter with the given name and value to the URL.\n\n```ts\nimport { putQueryParam, toUrl, href } from '@execonline-inc/web-url';\ntoUrl(\"https://example.com\").map(putQueryParam(\"foo\", \"bar\")).map(href) // Just(\"https://example.com?foo=bar\")\n```\n\n### `putQueryParamArray`\n\nThis function adds a query parameter with the given name and values to the URL.\n\n```ts\nimport { putQueryParamArray, toUrl, href } from '@execonline-inc/web-url';\ntoUrl(\"https://example.com\").map(putQueryParamArray(\"foo\", [\"bar\", \"baz\"])).map(href) // Just(\"https://example.com?foo=bar&foo=baz\")\n```\n\n### `putQueryParamRailsArray`\n\nThis function adds a query parameter with the given name and values to the URL, Rails-style.\n\n```ts\nimport { putQueryParamRailsArray, toUrl, href } from '@execonline-inc/web-url';\ntoUrl(\"https://example.com\").map(putQueryParamRailsArray(\"foo\", [\"bar\", \"baz\"])).map(href) // Just(\"https://example.com?foo[]=bar&foo[]=baz\")\n```\n\n### `getPathname`\n\nThis function returns the pathname of the URL.\n\n```ts\nimport { getPathname, toUrl, href } from '@execonline-inc/web-url';\ntoUrl(\"https://example.com/foo/bar\").map(getPathname).map(href) // Just(\"/foo/bar\")\n```\n\n### `setrPathname`\n\nThis function sets the pathname of the URL.\n\n```ts\nimport { setPathname, toUrl, href } from '@execonline-inc/web-url';\ntoUrl(\"https://example.com\").map(setPathname(\"/foo/bar\")).map(href) // Just(\"https://example.com/foo/bar\")\n```\n\n### `windowLocation`\n\nThis function returns the `URL` object for the current window as a `Task`.\n\n```ts\nimport { windowLocation } from '@execonline-inc/web-url';\n\nwindowLocation().fork(\n  (error: InvalidWebUrlError) => console.error(error),\n  (url: URL) => console.log(url.href) // $> \"https://example.com/foo/bar\"\n);\n```\n"}},"navTree":[{"title":"About","href":"/about","links":[]},{"title":"Guide","href":"/guide","links":[{"title":"CooperTS - Practical Patterns","href":"/guide/practical-patterns"}]},{"title":"Examples","href":"/examples","links":[{"title":"Task Manager App","href":"/examples#task-manager-app"},{"title":"Cellular Automata Emulator","href":"/examples#cellular-automata-emulator"},{"title":"This Doc Site üòÅ","href":"/examples#this-doc-site"}]},{"title":"Frequently Asked Questions","href":"/faq","links":[{"title":"What's All This About Map Then?","href":"/faq/about-map"},{"title":"Avoiding The Billion Dollar Mistake","href":"/faq/billion-dollar-mistake"},{"title":"When to Use Which - getOrElse vs getOrElseValue","href":"/faq/getorelse-vs-getorelsevalue"},{"title":"Imperative vs Declarative Programming","href":"/faq/imperative-vs-declarative"},{"title":"When To Use Which - map vs. andThen","href":"/faq/map-vs-andthen"},{"title":"When To Use Which - Maybe vs Result vs Task (and other Monads)","href":"/faq/monads"}]},{"title":"Packages","href":"/packages","links":[{"title":"ajaxian","href":"/packages/ajaxian"},{"title":"ajaxios","href":"/packages/ajaxios"},{"title":"@kofno/cute","href":"/packages/cute"},{"title":"@kofno/gaia","href":"/packages/gaia"},{"title":"jsonous","href":"/packages/jsonous"},{"title":"maybeasy","href":"/packages/maybeasy"},{"title":"nonempty-list","href":"/packages/nonempty-list"},{"title":"@kofno/piper","href":"/packages/piper"},{"title":"resulty","href":"/packages/resulty"},{"title":"@kofno/stack-ts","href":"/packages/stack-ts"},{"title":"taskarian","href":"/packages/taskarian"},{"title":"@execonline-inc/appy","href":"/packages/appy"},{"title":"@execonline-inc/collections","href":"/packages/collections"},{"title":"@execonline-inc/decoders","href":"/packages/decoders"},{"title":"@execonline-inc/dom","href":"/packages/dom"},{"title":"@execonline-inc/environment","href":"/packages/environment"},{"title":"@execonline-inc/error-handling","href":"/packages/error-handling"},{"title":"@execonline-inc/logging","href":"/packages/logging"},{"title":"@execonline-inc/maybe-adapter","href":"/packages/maybe-adapter"},{"title":"@execonline-inc/numbers","href":"/packages/numbers"},{"title":"@execonline-inc/resource","href":"/packages/resource"},{"title":"@execonline-inc/strings","href":"/packages/strings"},{"title":"@execonline-inc/time","href":"/packages/time"},{"title":"@execonline-inc/time-distance","href":"/packages/time-distance"},{"title":"@execonline-inc/translations","href":"/packages/translations"},{"title":"@execonline-inc/url","href":"/packages/url"},{"title":"@execonline-inc/web-url","href":"/packages/web-url"}]}]},"__N_SSG":true}